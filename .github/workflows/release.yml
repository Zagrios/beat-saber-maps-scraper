name: Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  build-and-upload:
    name: Build and upload
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl

          - build: windows
            os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Protoc (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version # Pour vÃ©rifier l'installation
          echo "PROTOC=$(which protoc)" >> $GITHUB_ENV
      
        - name: Install Protoc (Windows)
          if: runner.os == 'Windows'
          run: |
            choco install protoc -y
            protoc --version
            echo "PROTOC=$(Get-Command protoc).Source" | Out-String | Foreach {$_ -replace "`r`n", ""} | Foreach { "PROTOC=$_" } >> $GITHUB_ENV
          shell: powershell

      - name: Set PROTOC environment variable (Linux)
        if: runner.os == 'Linux'
        run: echo "PROTOC=$(which protoc)" >> $GITHUB_ENV

      - name: Set PROTOC environment variable (Windows)
        if: runner.os == 'Windows'
        run: echo "PROTOC=$(Get-Command protoc.exe).Source" | Out-String | Foreach {$_.Trim()} >> $GITHUB_ENV

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Build archive
        shell: bash
        run: |
          binary_name="beat-saber-maps-scraper"

          dirname="$binary_name-${{ env.VERSION }}-${{ matrix.target }}"
          mkdir "$dirname"
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary_name.exe" "$dirname"
            7z a "$dirname.zip" "$dirname"
            echo "ASSET=$dirname.zip" >> $GITHUB_ENV
          else
            mv "target/${{ matrix.target }}/release/$binary_name" "$dirname"
            tar -czf "$dirname.tar.gz" "$dirname"
            echo "ASSET=$dirname.tar.gz" >> $GITHUB_ENV
          fi

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}